import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = update.effective_user.first_name  # ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    await update.message.reply_text(f"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {user_name} /help ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = update.effective_user.first_name
    await update.message.reply_text(f"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {user_name} ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:\n"
                                    f"/sms ‡∏¢‡∏¥‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå\n"
                                    f"/checkip ‡πÄ‡∏ä‡πá‡∏Ñ IP")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /sms
async def sms_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
        if len(context.args) != 2:
            await update.message.reply_text("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö /sms ‡πÄ‡∏ö‡∏≠‡∏£‡πå10‡∏´‡∏•‡∏±‡∏Å ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô")
            return

        phone_number = context.args[0]
        amount = context.args[1]

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 10 ‡∏´‡∏•‡∏±‡∏Å
        if len(phone_number) != 10 or not phone_number.isdigit():
            await update.message.reply_text("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (10 ‡∏´‡∏•‡∏±‡∏Å)")
            return

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô API
        api_url = f"https://api.cyber-safe.cloud/api/spamsms/ebea760a90/{phone_number}/1"
        print(f"API URL: {api_url}")  # ‡∏û‡∏¥‡∏°‡∏û‡πå URL ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

        # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô API
        response = requests.get(api_url)

        if response.status_code == 200:
            data = response.json()

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á API
            if data.get("status") == "succeed":
                await update.message.reply_text(f"‡∏¢‡∏¥‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏ö‡∏≠‡∏£‡πå {phone_number} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {amount} üöÄüöÄ")
            else:
                await update.message.reply_text(f"‡∏¢‡∏¥‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏±‡∏Å‡∏´‡∏≤‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô")
        else:
            await update.message.reply_text(f"‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (HTTP {response.status_code})")

    except Exception as e:
        await update.message.reply_text(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /checkip
async def checkip_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("/checkip IP")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏´‡∏•‡∏±‡∏Å
if __name__ == '__main__':
    # ‡πÉ‡∏™‡πà Token ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å BotFather
    application = ApplicationBuilder().token('7291952960:AAF0s9gBMN7pfmha7cRoBsVF1ekgwq_7wHY').build()

    # ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á ‡πÜ
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CommandHandler('help', help_command))
    application.add_handler(CommandHandler('sms', sms_command))
    application.add_handler(CommandHandler('checkip', checkip_command))

    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
    application.run_polling()

